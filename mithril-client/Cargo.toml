[package]
name = "mithril-client"
version = "0.11.4"
description = "Mithril client library"
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
categories = ["cryptography"]
include = ["**/*.rs", "Cargo.toml", "README.md", ".gitignore"]

[lib]
crate-type = ["lib", "cdylib", "staticlib"]

[[test]]
name = "snapshot_list_get_show_download_verify"
path = "tests/snapshot_list_get_show_download_verify.rs"
required-features = ["fs"]

[[test]]
name = "cardano_transaction_proof"
path = "tests/cardano_transaction_proof.rs"
required-features = ["unstable"]

[dependencies]
anyhow = "1.0.95"
async-recursion = "1.1.1"
async-trait = "0.1.86"
chrono = { version = "0.4.39", features = ["serde"] }
flate2 = { version = "1.0.35", optional = true }
flume = { version = "0.11.1", optional = true }
futures = "0.3.31"
reqwest = { version = "0.12.12", default-features = false, features = [
    "charset",
    "http2",
    "macos-system-configuration",
    "json",
    "stream",
] }
semver = "1.0.25"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
slog = "2.7.0"
strum = { version = "0.26.3", features = ["derive"] }
tar = { version = "0.4.43", optional = true }
thiserror = "2.0.11"
tokio = { version = "1.43.0", features = ["sync"] }
uuid = { version = "1.13.1", features = ["v4"] }
zstd = { version = "0.13.2", optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
mithril-common = { path = "../mithril-common", version = "=0.5", default-features = false, features = [
    "fs",
] }

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom = { version = "0.2.15", features = ["js"] }
mithril-common = { path = "../mithril-common", version = "=0.5", default-features = false }
reqwest = { version = "0.12.12", default-features = false, features = [
    "charset",
    "http2",
    "macos-system-configuration",
    "json",
    "stream",
] }
uuid = { version = "1.13.1", features = ["v4", "js"] }

[dev-dependencies]
httpmock = "0.7.0"
mithril-common = { path = "../mithril-common", version = "=0.5", default-features = false, features = [
    "test_tools",
] }
mockall = "0.13.1"
slog = { version = "2.7.0", features = [
    "max_level_trace",
    "release_max_level_warn",
] }
slog-async = "2.8.0"
slog-term = "2.9.1"
tokio = { version = "1.43.0", features = ["macros", "rt"] }
warp = "0.3.7"

[features]
# Include native-tls in reqwest by default
default = ["native-tls", "rug-backend", "enable-http-compression"]

# Full feature set
full = ["fs"]

# Enable file system releated functionnality, right now that mean ony snapshot download
fs = ["flate2", "flume", "tar", "tokio/rt", "zstd"]
portable = []                                       # deprecated, will be removed soon
unstable = []

# These features are for support of dependent crates only.
# They do not change the operation of the main crate.
native-tls = ["reqwest/native-tls"]
native-tls-alpn = ["reqwest/native-tls-alpn"]
native-tls-vendored = ["reqwest/native-tls-vendored"]

rustls-tls = ["reqwest/rustls-tls"]
rustls-tls-manual-roots = ["reqwest/rustls-tls-manual-roots"]
rustls-tls-webpki-roots = ["reqwest/rustls-tls-webpki-roots"]
rustls-tls-native-roots = ["reqwest/rustls-tls-native-roots"]

# Support compressed traffic with `request`
enable-http-compression = ["reqwest/gzip", "reqwest/zstd", "reqwest/deflate", "reqwest/brotli"]

# Enables `rug-backend` features for `mithril-common` dependency
rug-backend = ["mithril-common/rug-backend"]
# Enables `num-integer-backend` features for `mithril-common` dependency
# by default it's `rug-backend`
num-integer-backend = ["mithril-common/num-integer-backend"]

[package.metadata.docs.rs]
all-features = true
# enable unstable features in the documentation
rustdoc-args = ["--cfg", "docsrs"]
